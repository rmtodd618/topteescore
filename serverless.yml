org: rmtodd618
service: score # NOTE: update this with your service name
app: strokes
configValidationMode: error
provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 512
  region: us-east-1
  environment:
    SCORE_CARD_TABLE: "score-card"
    STROKES_BUCKET: "golf-strokes"
  iamRoleStatements:
  - Effect: Allow
    Action:
      - sqs:*
    Resource: arn:aws:sqs:*:*
  - Effect: Allow
    Action:
      - "s3:ListBucket"
      - "s3:PutBucket"
    Resource: "*"
  - Effect: Allow
    Action:
      - lambda:GetFunction
      - lambda:InvokeFunction
      - lambda:GetFunctionConfiguration
    Resource: "*"
  - Effect: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: arn:aws:dynamodb:*:*
resources:
  Description: "Stroke tracker for stage "
  Resources:
    LAMBDAFAILURE:
      Type: AWS::SQS::Queue
      Properties:
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - "LambdaFailureQueue"
              - "Arn"
          maxReceiveCount: 2
    LambdaFailureQueue:
      Type: "AWS::SQS::Queue"
    StrokeRecorderBucket:
      Type: "AWS::S3::Bucket"
      Properties:
        BucketName: golf-strokes
    ScoreCard:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: "name"
            AttributeType: "S"
          - AttributeName: "serialNumber"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "name"
            KeyType: "HASH"
        ProvisionedThroughput:
           ReadCapacityUnits: 1
           WriteCapacityUnits: 1
        TableName: score-card
        StreamSpecification:
          StreamViewType: NEW_IMAGE
        GlobalSecondaryIndexes:
          - IndexName: "serialnumber-index"
            KeySchema:
              - AttributeName: "serialNumber"
                KeyType: "HASH"
            Projection:
              ProjectionType: KEYS_ONLY
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
# you can overwrite defaults here

functions:
  Iot:
    handler: app/iot/iot.handler
    description: Handles the clicks fo the button
    onError: {
          "Fn::GetAtt": ["LambdaFailureQueue", "Arn"]
        }
    timeout: 60
    # events:
    #   - iot:
    #       sql: "SELECT * FROM '${file(.local-keys.yaml):AWS_IOT_BUTTON_TOPIC}'"
    #       enabled: true

plugins:
  - serverless-s3-remover
custom:
  remover:
     buckets:
      -StrokeRecorderBucket
